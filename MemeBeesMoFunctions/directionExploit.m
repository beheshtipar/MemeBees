%% *directionExploit: Used for direction exploitation in RWDE(Random Walk with Direction Exploitation)

% Created on May 11 2017
% By Muhammad Asif

% From "Memetic Artificial Bee Colony Algorithm for Large-Scale Global
% Optimization" by Fister et al.

%Inspired from Engineering Optimization: Theory and Practice by SS Rao

%Purpose of the function is to optimize the step length for a given direction, so that the new candidate solution's fitness is maximized

%					*Function I/O*

% *Input: *
% * *Xprev*: Current Position of Candidate Solution, passed as a vector
% * *u*: unit vector with the direction to be exploited
% * *step*: Starting step size
% * *minstep*: Used as the starting increment


% *Output: *

% * *exploitedStep*: Optimized step length
% * *fmorecalls*: Number of function calls this subroutine made

%% Source Code

function [beststep, fcalls] = directionExploit(Xprev,u,step,minstep)

inc = minstep;
Fprev = objFunc(Xprev);

beststep = step+inc;

fcalls=0;
while(1)
    X = Xprev+beststep.*u;
    F = objFunc(X);
    fcalls= fcalls+1;
    
	
	%%
	%Condition violated, means we're past optimization. Return what we have
    if(F>=Fprev)
        beststep = beststep-inc;
        return;
    end
    
    %%
	%Function still being improved, so step is incremented and inc is
    %doubled
    Fprev = F;
    inc= inc*2;
    beststep = beststep+inc;
    
end

